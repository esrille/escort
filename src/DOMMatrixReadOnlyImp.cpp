// Generated by esidl 0.4.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "DOMMatrixReadOnlyImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

double DOMMatrixReadOnlyImp::getA()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getB()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getC()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getD()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getE()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getF()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM11()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM12()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM13()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM14()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM21()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM22()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM23()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM24()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM31()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM32()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM33()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM34()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM41()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM42()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM43()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::getM44()
{
    // TODO: implement me!
    return 0;
}

DOMMatrix DOMMatrixReadOnlyImp::translate(double tx, double ty)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::translate(double tx, double ty, double tz)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale(double scale)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale(double scale, double originX)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale(double scale, double originX, double originY)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale3d(double scale)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale3d(double scale, double originX)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale3d(double scale, double originX, double originY)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scale3d(double scale, double originX, double originY, double originZ)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX, double scaleY)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX, double scaleY, double scaleZ)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX, double originY)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX, double originY, double originZ)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::rotate(double angle)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::rotate(double angle, double originX)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::rotate(double angle, double originX, double originY)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::rotateFromVector(double x, double y)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::rotateAxisAngle(double x, double y, double z, double angle)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::skewX(double sx)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::skewY(double sy)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::multiply(DOMMatrix other)
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::flipX()
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::flipY()
{
    // TODO: implement me!
    return nullptr;
}

DOMMatrix DOMMatrixReadOnlyImp::inverse()
{
    // TODO: implement me!
    return nullptr;
}

bool DOMMatrixReadOnlyImp::is2D()
{
    // TODO: implement me!
    return 0;
}

double DOMMatrixReadOnlyImp::determinant()
{
    // TODO: implement me!
    return 0;
}

DOMPoint DOMMatrixReadOnlyImp::transformPoint(DOMPointInit point)
{
    // TODO: implement me!
    return nullptr;
}

Float32Array DOMMatrixReadOnlyImp::toFloat32Array()
{
    // TODO: implement me!
    return nullptr;
}

Float64Array DOMMatrixReadOnlyImp::toFloat64Array()
{
    // TODO: implement me!
    return nullptr;
}

}
}
}
}
