// Generated by esidl 0.4.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/DOMMatrix.h>
#include "DOMMatrixReadOnlyImp.h"

#include <org/w3c/dom/DOMMatrixReadOnly.h>
#include <org/w3c/dom/DOMMatrix.h>
#include <org/w3c/dom/Float32Array.h>
#include <org/w3c/dom/Float64Array.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class DOMMatrixImp : public ObjectMixin<DOMMatrixImp, DOMMatrixReadOnlyImp>
{
public:
    // DOMMatrix
    double getA();
    void setA(double a);
    double getB();
    void setB(double b);
    double getC();
    void setC(double c);
    double getD();
    void setD(double d);
    double getE();
    void setE(double e);
    double getF();
    void setF(double f);
    double getM11();
    void setM11(double m11);
    double getM12();
    void setM12(double m12);
    double getM13();
    void setM13(double m13);
    double getM14();
    void setM14(double m14);
    double getM21();
    void setM21(double m21);
    double getM22();
    void setM22(double m22);
    double getM23();
    void setM23(double m23);
    double getM24();
    void setM24(double m24);
    double getM31();
    void setM31(double m31);
    double getM32();
    void setM32(double m32);
    double getM33();
    void setM33(double m33);
    double getM34();
    void setM34(double m34);
    double getM41();
    void setM41(double m41);
    double getM42();
    void setM42(double m42);
    double getM43();
    void setM43(double m43);
    double getM44();
    void setM44(double m44);
    void multiplyBy(DOMMatrix other);
    void preMultiplyBy(DOMMatrix other);
    void translateBy(double tx, double ty);
    void translateBy(double tx, double ty, double tz);
    void scaleBy(double scale);
    void scaleBy(double scale, double originX);
    void scaleBy(double scale, double originX, double originY);
    void scale3dBy(double scale);
    void scale3dBy(double scale, double originX);
    void scale3dBy(double scale, double originX, double originY);
    void scale3dBy(double scale, double originX, double originY, double originZ);
    void scaleNonUniformBy(double scaleX);
    void scaleNonUniformBy(double scaleX, double scaleY);
    void scaleNonUniformBy(double scaleX, double scaleY, double scaleZ);
    void scaleNonUniformBy(double scaleX, double scaleY, double scaleZ, double originX);
    void scaleNonUniformBy(double scaleX, double scaleY, double scaleZ, double originX, double originY);
    void scaleNonUniformBy(double scaleX, double scaleY, double scaleZ, double originX, double originY, double originZ);
    void rotateBy(double angle);
    void rotateBy(double angle, double originX);
    void rotateBy(double angle, double originX, double originY);
    void rotateFromVectorBy(double x, double y);
    void rotateAxisAngleBy(double x, double y, double z, double angle);
    void skewXBy(double sx);
    void skewYBy(double sy);
    void invert();
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return DOMMatrix::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return DOMMatrix::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXIMP_H_INCLUDED
