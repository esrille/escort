// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "Float32ArrayImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

unsigned int Float32ArrayImp::getLength()
{
    // TODO: implement me!
    return 0;
}

float Float32ArrayImp::get(unsigned int index)
{
    // TODO: implement me!
    return 0;
}

void Float32ArrayImp::set(unsigned int index, float value)
{
    // TODO: implement me!
}

void Float32ArrayImp::set(Float32Array array)
{
    // TODO: implement me!
}

void Float32ArrayImp::set(Float32Array array, unsigned int offset)
{
    // TODO: implement me!
}

void Float32ArrayImp::set(ObjectArray<float> array)
{
    // TODO: implement me!
}

void Float32ArrayImp::set(ObjectArray<float> array, unsigned int offset)
{
    // TODO: implement me!
}

Float32Array Float32ArrayImp::subarray(int start, int end)
{
    // TODO: implement me!
    return nullptr;
}

ArrayBuffer Float32ArrayImp::getBuffer()
{
    // TODO: implement me!
    return nullptr;
}

unsigned int Float32ArrayImp::getByteOffset()
{
    // TODO: implement me!
    return 0;
}

unsigned int Float32ArrayImp::getByteLength()
{
    // TODO: implement me!
    return 0;
}

}
}
}
}
