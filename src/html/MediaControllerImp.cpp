// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "MediaControllerImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

unsigned short MediaControllerImp::getReadyState()
{
    // TODO: implement me!
    return 0;
}

html::TimeRanges MediaControllerImp::getBuffered()
{
    // TODO: implement me!
    return nullptr;
}

html::TimeRanges MediaControllerImp::getSeekable()
{
    // TODO: implement me!
    return nullptr;
}

double MediaControllerImp::getDuration()
{
    // TODO: implement me!
    return 0;
}

double MediaControllerImp::getCurrentTime()
{
    // TODO: implement me!
    return 0;
}

void MediaControllerImp::setCurrentTime(double currentTime)
{
    // TODO: implement me!
}

bool MediaControllerImp::getPaused()
{
    // TODO: implement me!
    return 0;
}

html::MediaControllerPlaybackState MediaControllerImp::getPlaybackState()
{
    // TODO: implement me!
    return 0;
}

html::TimeRanges MediaControllerImp::getPlayed()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::pause()
{
    // TODO: implement me!
}

void MediaControllerImp::unpause()
{
    // TODO: implement me!
}

void MediaControllerImp::play()
{
    // TODO: implement me!
}

double MediaControllerImp::getDefaultPlaybackRate()
{
    // TODO: implement me!
    return 0;
}

void MediaControllerImp::setDefaultPlaybackRate(double defaultPlaybackRate)
{
    // TODO: implement me!
}

double MediaControllerImp::getPlaybackRate()
{
    // TODO: implement me!
    return 0;
}

void MediaControllerImp::setPlaybackRate(double playbackRate)
{
    // TODO: implement me!
}

double MediaControllerImp::getVolume()
{
    // TODO: implement me!
    return 0;
}

void MediaControllerImp::setVolume(double volume)
{
    // TODO: implement me!
}

bool MediaControllerImp::getMuted()
{
    // TODO: implement me!
    return 0;
}

void MediaControllerImp::setMuted(bool muted)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnemptied()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnemptied(events::EventHandlerNonNull onemptied)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnloadedmetadata()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnloadedmetadata(events::EventHandlerNonNull onloadedmetadata)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnloadeddata()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnloadeddata(events::EventHandlerNonNull onloadeddata)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOncanplay()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOncanplay(events::EventHandlerNonNull oncanplay)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOncanplaythrough()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOncanplaythrough(events::EventHandlerNonNull oncanplaythrough)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnplaying()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnplaying(events::EventHandlerNonNull onplaying)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnended()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnended(events::EventHandlerNonNull onended)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnwaiting()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnwaiting(events::EventHandlerNonNull onwaiting)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOndurationchange()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOndurationchange(events::EventHandlerNonNull ondurationchange)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOntimeupdate()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOntimeupdate(events::EventHandlerNonNull ontimeupdate)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnplay()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnplay(events::EventHandlerNonNull onplay)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnpause()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnpause(events::EventHandlerNonNull onpause)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnratechange()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnratechange(events::EventHandlerNonNull onratechange)
{
    // TODO: implement me!
}

events::EventHandlerNonNull MediaControllerImp::getOnvolumechange()
{
    // TODO: implement me!
    return nullptr;
}

void MediaControllerImp::setOnvolumechange(events::EventHandlerNonNull onvolumechange)
{
    // TODO: implement me!
}

}
}
}
}
