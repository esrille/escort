// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "HitRegionOptionsImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

html::Path HitRegionOptionsImp::getPath()
{
    // TODO: implement me!
    return nullptr;
}

void HitRegionOptionsImp::setPath(html::Path path)
{
    // TODO: implement me!
}

std::u16string HitRegionOptionsImp::getId()
{
    // TODO: implement me!
    return u"";
}

void HitRegionOptionsImp::setId(const std::u16string& id)
{
    // TODO: implement me!
}

Nullable<std::u16string> HitRegionOptionsImp::getParentID()
{
    // TODO: implement me!
    return u"";
}

void HitRegionOptionsImp::setParentID(const Nullable<std::u16string>& parentID)
{
    // TODO: implement me!
}

std::u16string HitRegionOptionsImp::getCursor()
{
    // TODO: implement me!
    return u"";
}

void HitRegionOptionsImp::setCursor(const std::u16string& cursor)
{
    // TODO: implement me!
}

Element HitRegionOptionsImp::getControl()
{
    // TODO: implement me!
    return nullptr;
}

void HitRegionOptionsImp::setControl(Element control)
{
    // TODO: implement me!
}

Nullable<std::u16string> HitRegionOptionsImp::getLabel()
{
    // TODO: implement me!
    return u"";
}

void HitRegionOptionsImp::setLabel(const Nullable<std::u16string>& label)
{
    // TODO: implement me!
}

Nullable<std::u16string> HitRegionOptionsImp::getRole()
{
    // TODO: implement me!
    return u"";
}

void HitRegionOptionsImp::setRole(const Nullable<std::u16string>& role)
{
    // TODO: implement me!
}

}
}
}
}
