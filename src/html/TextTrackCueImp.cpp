// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "TextTrackCueImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

html::TextTrack TextTrackCueImp::getTrack()
{
    // TODO: implement me!
    return nullptr;
}

std::u16string TextTrackCueImp::getId()
{
    // TODO: implement me!
    return u"";
}

void TextTrackCueImp::setId(const std::u16string& id)
{
    // TODO: implement me!
}

double TextTrackCueImp::getStartTime()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setStartTime(double startTime)
{
    // TODO: implement me!
}

double TextTrackCueImp::getEndTime()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setEndTime(double endTime)
{
    // TODO: implement me!
}

bool TextTrackCueImp::getPauseOnExit()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setPauseOnExit(bool pauseOnExit)
{
    // TODO: implement me!
}

std::u16string TextTrackCueImp::getVertical()
{
    // TODO: implement me!
    return u"";
}

void TextTrackCueImp::setVertical(const std::u16string& vertical)
{
    // TODO: implement me!
}

bool TextTrackCueImp::getSnapToLines()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setSnapToLines(bool snapToLines)
{
    // TODO: implement me!
}

Any TextTrackCueImp::getLine()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setLine(Any line)
{
    // TODO: implement me!
}

int TextTrackCueImp::getPosition()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setPosition(int position)
{
    // TODO: implement me!
}

int TextTrackCueImp::getSize()
{
    // TODO: implement me!
    return 0;
}

void TextTrackCueImp::setSize(int size)
{
    // TODO: implement me!
}

std::u16string TextTrackCueImp::getAlign()
{
    // TODO: implement me!
    return u"";
}

void TextTrackCueImp::setAlign(const std::u16string& align)
{
    // TODO: implement me!
}

std::u16string TextTrackCueImp::getText()
{
    // TODO: implement me!
    return u"";
}

void TextTrackCueImp::setText(const std::u16string& text)
{
    // TODO: implement me!
}

DocumentFragment TextTrackCueImp::getCueAsHTML()
{
    // TODO: implement me!
    return nullptr;
}

events::EventHandlerNonNull TextTrackCueImp::getOnenter()
{
    // TODO: implement me!
    return nullptr;
}

void TextTrackCueImp::setOnenter(events::EventHandlerNonNull onenter)
{
    // TODO: implement me!
}

events::EventHandlerNonNull TextTrackCueImp::getOnexit()
{
    // TODO: implement me!
    return nullptr;
}

void TextTrackCueImp::setOnexit(events::EventHandlerNonNull onexit)
{
    // TODO: implement me!
}

}
}
}
}
