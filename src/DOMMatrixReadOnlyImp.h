// Generated by esidl 0.4.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXREADONLYIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXREADONLYIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/DOMMatrixReadOnly.h>

#include <org/w3c/dom/DOMPoint.h>
#include <org/w3c/dom/DOMPointInit.h>
#include <org/w3c/dom/DOMMatrix.h>
#include <org/w3c/dom/Float32Array.h>
#include <org/w3c/dom/Float64Array.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class DOMMatrixReadOnlyImp : public ObjectMixin<DOMMatrixReadOnlyImp>
{
public:
    // DOMMatrixReadOnly
    double getA();
    double getB();
    double getC();
    double getD();
    double getE();
    double getF();
    double getM11();
    double getM12();
    double getM13();
    double getM14();
    double getM21();
    double getM22();
    double getM23();
    double getM24();
    double getM31();
    double getM32();
    double getM33();
    double getM34();
    double getM41();
    double getM42();
    double getM43();
    double getM44();
    DOMMatrix translate(double tx, double ty);
    DOMMatrix translate(double tx, double ty, double tz);
    DOMMatrix scale(double scale);
    DOMMatrix scale(double scale, double originX);
    DOMMatrix scale(double scale, double originX, double originY);
    DOMMatrix scale3d(double scale);
    DOMMatrix scale3d(double scale, double originX);
    DOMMatrix scale3d(double scale, double originX, double originY);
    DOMMatrix scale3d(double scale, double originX, double originY, double originZ);
    DOMMatrix scaleNonUniform(double scaleX);
    DOMMatrix scaleNonUniform(double scaleX, double scaleY);
    DOMMatrix scaleNonUniform(double scaleX, double scaleY, double scaleZ);
    DOMMatrix scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX);
    DOMMatrix scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX, double originY);
    DOMMatrix scaleNonUniform(double scaleX, double scaleY, double scaleZ, double originX, double originY, double originZ);
    DOMMatrix rotate(double angle);
    DOMMatrix rotate(double angle, double originX);
    DOMMatrix rotate(double angle, double originX, double originY);
    DOMMatrix rotateFromVector(double x, double y);
    DOMMatrix rotateAxisAngle(double x, double y, double z, double angle);
    DOMMatrix skewX(double sx);
    DOMMatrix skewY(double sy);
    DOMMatrix multiply(DOMMatrix other);
    DOMMatrix flipX();
    DOMMatrix flipY();
    DOMMatrix inverse();
    bool is2D();
    double determinant();
    DOMPoint transformPoint(DOMPointInit point);
    Float32Array toFloat32Array();
    Float64Array toFloat64Array();
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return DOMMatrixReadOnly::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return DOMMatrixReadOnly::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_DOMMATRIXREADONLYIMP_H_INCLUDED
