/*
 * CSSOM View Module
 *
 * Original Editor's Draft 3 August 2012:
 *
 *   http://dvcs.w3.org/hg/csswg/raw-file/tip/cssom-view/Overview.html
 */

module html
{

partial interface Window {
    MediaQueryList matchMedia (DOMString query);
    readonly attribute Screen screen;
    readonly attribute long innerWidth;
    readonly attribute long innerHeight;
    readonly attribute long scrollX;
    readonly attribute long pageXOffset;
    readonly attribute long scrollY;
    readonly attribute long pageYOffset;
    void scroll (long x, long y);
    void scrollTo (long x, long y);
    void scrollBy (long x, long y);
    readonly attribute long screenX;
    readonly attribute long screenY;
    readonly attribute long outerWidth;
    readonly attribute long outerHeight;
};

interface MediaQueryList {
  readonly attribute DOMString media;
  readonly attribute boolean matches;
  void addListener(MediaQueryListListener listener);
  void removeListener(MediaQueryListListener listener);
};

callback MediaQueryListListener = void (MediaQueryList list);

interface Screen {
    readonly attribute unsigned long availWidth;
    readonly attribute unsigned long availHeight;
    readonly attribute unsigned long width;
    readonly attribute unsigned long height;
    readonly attribute unsigned long colorDepth;
    readonly attribute unsigned long pixelDepth;
};

};

module dom
{

typedef ranges::Range Range;

partial interface Document {
    Element? elementFromPoint (float x, float y);
    CaretPosition? caretPositionFromPoint (float x, float y);
};

interface CaretPosition {
    readonly attribute Node offsetNode;
    readonly attribute unsigned long offset;
    DOMRect? getClientRect();
};

partial interface Element {
    DOMRectList getClientRects ();
    DOMRect getBoundingClientRect ();
    void scrollIntoView (optional boolean top);
    attribute long scrollTop;
    attribute long scrollLeft;
    readonly attribute long scrollWidth;
    readonly attribute long scrollHeight;
    readonly attribute long clientTop;
    readonly attribute long clientLeft;
    readonly attribute long clientWidth;
    readonly attribute long clientHeight;
};

};

module html
{

typedef dom::Element Element;

partial interface HTMLElement {
    readonly attribute Element offsetParent;
    readonly attribute long offsetTop;
    readonly attribute long offsetLeft;
    readonly attribute long offsetWidth;
    readonly attribute long offsetHeight;
};

};

module ranges
{

typedef dom::DOMRectList DOMRectList;
typedef dom::DOMRect DOMRect;

partial interface Range {
    DOMRectList getClientRects ();
    DOMRect getBoundingClientRect ();
};

};

module events
{

partial interface MouseEvent {
    // screenX and screenY are defined in DOM 3
    // readonly attribute long screenX;
    // readonly attribute long screenY;
    readonly attribute long pageX;
    readonly attribute long pageY;
    // clientX and clientY are defined in DOM 3
    // readonly attribute long clientX;
    // readonly attribute long clientY;
    readonly attribute long x;
    readonly attribute long y;
    readonly attribute long offsetX;
    readonly attribute long offsetY;
};

};
